"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var t=require("node:fs/promises"),e=require("fs"),i=require("os"),r=require("path"),n=require("@rollup/pluginutils"),a=require("zlib"),s=require("util"),o=require("tar-mini");function l(t){return t.length}function u(t,e){let i="function"==typeof e?e(t):e,{dir:n,base:a}=r.parse(t);return i.replace(/\[path\]/,n?n+"/":"").replace(/\[base\]/,a)}function c(t){return/^\\\\\?\\/.test(t)?t:t.replace(/\\/g,"/")}async function p(e){let i=await Promise.all((await t.readdir(e)).map(t=>r.join(e,t))),n=0,a=[];for(;n!==l(i);){let e=i[n],s=await t.stat(e);if(s.isDirectory()){let n=await t.readdir(e);i.push(...n.map(t=>r.join(e,t)))}s.isFile()&&a.push(e),n++}return a}const f=new TextEncoder;function d(t){return"string"==typeof t?f.encode(t):t}async function h(t,e,i){try{return await e(t,i)}catch(t){return Promise.reject(t)}}const m={gzip:{level:a.constants.Z_BEST_COMPRESSION},brotliCompress:{params:{[a.constants.BROTLI_PARAM_QUALITY]:a.constants.BROTLI_MAX_QUALITY}},deflate:{level:a.constants.Z_BEST_COMPRESSION},deflateRaw:{level:a.constants.Z_BEST_COMPRESSION}};function y(t,e,i){return e in t?Object.defineProperty(t,e,{value:i,enumerable:!0,configurable:!0,writable:!0}):t[e]=i,t}class g{enqueue(t){this.queue.push(t),this.run()}async run(){for(;this.running<this.maxConcurrent&&this.queue.length;){let t=this.queue.shift();this.running++;try{await t()}catch(t){this.errors.push(t)}finally{this.running--,this.run()}}}async wait(){for(;this.running;)await new Promise(t=>setTimeout(t,0));if(l(this.errors))throw AggregateError(this.errors,"task failed")}constructor(t){y(this,"maxConcurrent",void 0),y(this,"queue",void 0),y(this,"running",void 0),y(this,"errors",void 0),this.maxConcurrent=t,this.queue=[],this.errors=[],this.running=0}}const w="vite:build-import-analysis",b="vite-plugin-compression",v=(()=>{let t=i.cpus()||{length:1};return 1===t.length?10:Math.max(1,t.length-1)})();function O(t){var e;let i=new Set,n=(t,e)=>c(r.resolve(t,e));return(null===(e=t.build.rollupOptions)||void 0===e?void 0:e.output)?(Array.isArray(t.build.rollupOptions.output)?t.build.rollupOptions.output:[t.build.rollupOptions.output]).forEach(e=>{("object"!=typeof e||l(Object.keys(e)))&&i.add(n(t.root,e.dir||t.build.outDir))}):i.add(n(t.root,t.build.outDir)),i}async function P(t,e){let i=t.generateBundle;if("object"==typeof i&&i.handler){let t=i.handler;i.handler=async function(...i){await t.apply(this,i),await e.apply(this,i)}}"function"==typeof i&&(t.generateBundle=async function(...t){await i.apply(this,t),await e.apply(this,t)})}async function j(t,i){let n=!("copyPublicDir"in t.build)||t.build.copyPublicDir;if(t.publicDir&&n&&e.existsSync(t.publicDir)){let e=await p(t.publicDir),n=r.join(t.root,r.relative(t.root,t.publicDir));await Promise.all(e.map(async t=>{let e=c(r.relative(n,t));await i(e,t)}))}}function q(e={}){let{include:i=/\.(html|xml|css|json|js|mjs|svg|yaml|yml|toml)$/,exclude:o,threshold:c=0,algorithm:p="gzip",filename:f,compressionOptions:y,deleteOriginalAssets:S=!1,skipIfLargerOrEqual:x=!0}=e,_=n.createFilter(i,o),z=[],B=[],E=Object.create(null);E.algorithm="string"==typeof p?function(t){let e=t in a?t:"gzip";return{algorithm:s.promisify(a[e])}}(p).algorithm:p,E.options="function"==typeof p?y:Object.assign(m[p],y),E.filename=null!=f?f:"brotliCompress"===p?"[path][base].br":"[path][base].gz";let A=new g(v),C=async function(t,e){for(let t in e){if(!_(t))continue;let i=e[t],r=d("asset"===i.type?i.source:i.code),n=l(r);n<c||A.enqueue(async()=>{let i=u(t,E.filename),a=await h(r,E.algorithm,E.options);x&&l(a)>=n||((S||t===i)&&Reflect.deleteProperty(e,t),this.emitFile({type:"asset",fileName:i,source:a}))})}await A.wait().catch(this.error)},R={staticOutputs:new Set},D=null,I={name:b,apply:"build",enforce:"post",api:R,options(){let{rollupVersion:t}=this.meta,[e,i]=t.split(".");if(2>=+e&&78>+i){P(D,C);return}I.generateBundle={order:"post",handler:C}},async configResolved(t){if(B.push(...O(t)),await j(t,async t=>{z.push(t)}),!(D=t.plugins.find(t=>t.name===w)))throw Error("[vite-plugin-compression] Can't be work in versions lower than vite at 2.0.0")},async closeBundle(){for(let e of B)for(let i of z)A.enqueue(async()=>{let n=r.join(e,i);if(_(n)||R.staticOutputs.has(i)){let{size:a}=await t.stat(n);if(a<c)R.staticOutputs.has(i)||R.staticOutputs.add(i);else{let a=await t.readFile(n),s=await h(a,E.algorithm,E.options);if(x&&l(s)>=l(a))return;let o=u(i,E.filename);R.staticOutputs.has(o)||R.staticOutputs.add(o);let c=r.join(e,o);S&&c!==n&&await t.rm(n,{recursive:!0,force:!0}),await t.writeFile(c,s)}}else R.staticOutputs.add(i)});await A.wait().catch(t=>t)}};return I}q.getPluginAPI=t=>{var e;return null===(e=t.find(t=>t.name===b))||void 0===e?void 0:e.api},exports.compression=q,exports.default=q,exports.defineCompressionOption=function(t){return t},exports.tarball=function(i={}){let n;let{dest:s,gz:l=!1}=i,u=[],p=[],f=[],h=process.cwd(),m=function(){let t=o.createPack(),i={dests:[],root:"",gz:!1};return{add:e=>{t.add(d(e.content),{filename:e.filename})},setup:async n=>(Object.assign(i,n),Promise.all(i.dests.map(n=>{let s=c(r.resolve(i.root,n+".tar"+(i.gz?".gz":""))),o=c(r.dirname(s));return i.root!==o&&e.mkdirSync(o,{recursive:!0}),new Promise((r,n)=>{let o=e.createWriteStream(s);if(o.on("error",n),o.on("finish",r),i.gz){t.receiver.pipe(a.createGzip()).pipe(o);return}t.receiver.pipe(o)})}))),done:()=>t.done()}}(),y=new g(v);return{name:"vite-plugin-tarball",enforce:"post",async configResolved(t){if(p.push(...O(t)),h=t.root,f=s?[s]:p,(n=q.getPluginAPI(t.plugins))||await j(t,async t=>{u.push(t)}),!t.plugins.find(t=>t.name===w))throw Error("[vite-plugin-tarball] can't be work in versions lower than vite at 2.0.0");m.setup({dests:f,root:h,gz:l})},async writeBundle(t,e){for(let t in e){let i=e[t];m.add({filename:t,content:"asset"===i.type?i.source:i.code})}},async closeBundle(){for(let e of(!u.length&&n&&n.staticOutputs.size&&u.push(...n.staticOutputs),p))for(let i of u)y.enqueue(async()=>{let n=r.join(e,i),a=await t.readFile(n);m.add({filename:i,content:a})});await y.wait(),m.done()}}};
